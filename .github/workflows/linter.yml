---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Code quality checks

#############################
# Start the job on all push #
#############################
on:
  pull_request:
    branches: [main]
  push:
    branches:
      - main
  workflow_dispatch:
###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
          
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint --if-present

      ################################
      # Run Linter against code base #
      ################################
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x.x'
      # Run NuGet restore for the solution at repo root
      - name: Run NuGet restore
        run: dotnet restore

      # Run code analysis for all projects/solutions, such that code analysis violations break the build.
      - name: Run .NET Code Analysis
        uses: dotnet/code-analysis@main
        id: code-analysis
        with:
          build-breaking: true
